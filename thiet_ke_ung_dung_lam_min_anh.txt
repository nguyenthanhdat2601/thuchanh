import cv2
import numpy as np
import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk

class ImageSmoothingApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Image Smoothing App")

        self.image_path = None
        self.smoothing_value = 5  # Độ mịn mặc định

        self.create_widgets()

    def create_widgets(self):
        self.label = tk.Label(self.root, text="Image Smoothing App", font=("Helvetica", 16))
        self.label.pack(pady=10)

        self.load_button = tk.Button(self.root, text="Load Image", command=self.load_image)
        self.load_button.pack(pady=5)

        self.smoothing_label = tk.Label(self.root, text="Smoothing Value: 5")
        self.smoothing_label.pack(pady=5)

        self.smoothing_slider = tk.Scale(self.root, from_=1, to=15, orient=tk.HORIZONTAL, length=200, command=self.update_smoothing_value)
        self.smoothing_slider.set(self.smoothing_value)
        self.smoothing_slider.pack(pady=5)

        self.smooth_button = tk.Button(self.root, text="Apply Smoothing", command=self.apply_smoothing)
        self.smooth_button.pack(pady=5)

    def load_image(self):
        file_path = filedialog.askopenfilename(title="Select an Image", filetypes=[("Image files", "*.png;*.jpg;*.bmp;*.jpeg")])
        if file_path:
            self.image_path = file_path

            image = Image.open(self.image_path)
            image = ImageTk.PhotoImage(image)

            if hasattr(self, 'panel'):
                self.panel.destroy()

            self.panel = tk.Label(self.root, image=image)
            self.panel.image = image
            self.panel.pack(padx=10, pady=10)

    def update_smoothing_value(self, value):
        self.smoothing_value = int(value)
        self.smoothing_label.config(text=f"Smoothing Value: {self.smoothing_value}")

    def apply_smoothing(self):
        if self.image_path:
            original_image = cv2.imread(self.image_path)

            # Áp dụng bộ lọc làm mịn (GaussianBlur)
            smoothed_image = cv2.GaussianBlur(original_image, (self.smoothing_value, self.smoothing_value), 0)

            # Hiển thị ảnh gốc và ảnh đã được làm mịn (chỉ để tham khảo, có thể bỏ qua dòng này)
            cv2.imshow("Original Image", original_image)
            cv2.imshow("Smoothed Image", smoothed_image)
            cv2.waitKey(0)
            cv2.destroyAllWindows()

if __name__ == "__main__":
    root = tk.Tk()
    app = ImageSmoothingApp(root)
    root.mainloop()


#
import cv2

def adjust_smoothness(image_path, kernel_size=5):
    # Đọc ảnh từ đường dẫn
    image = cv2.imread(image_path)

    # Lọc làm mịn ảnh bằng GaussianBlur
    smoothed_image = cv2.GaussianBlur(image, (kernel_size, kernel_size), 0)

    # Hiển thị ảnh gốc và ảnh sau khi làm mịn
    cv2.imshow("Original Image", image)
    cv2.imshow("Smoothed Image", smoothed_image)

    # Chờ người dùng nhấn một phím để đóng cửa sổ
    cv2.waitKey(0)
    cv2.destroyAllWindows()

if __name__ == "__main__":
    input_image_path = "duong_dan_anh/input.jpg"
    kernel_size = 5  # Bạn có thể điều chỉnh giá trị này để thay đổi độ mịn

    adjust_smoothness(input_image_path, kernel_size)
